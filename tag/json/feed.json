{
    "version": "https://jsonfeed.org/version/1",
    "title": "繁華落盡 似水流年 • All posts by \"json\" tag",
    "description": "编程日记 & 随笔",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/value/CPP/jsoncpp",
            "url": "http://example.com/value/CPP/jsoncpp",
            "title": "jsoncpp",
            "date_published": "2024-04-06T02:28:27.024Z",
            "content_html": "<h1 id=\"jsoncpp\"><a class=\"anchor\" href=\"#jsoncpp\">#</a>  <code>jsoncpp</code></h1>\n<h2 id=\"ubuntu编译\"><a class=\"anchor\" href=\"#ubuntu编译\">#</a>  <code>ubuntu</code>  编译</h2>\n<ul>\n<li>\n<p><code>github</code>  地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29wZW4tc291cmNlLXBhcnNlcnMvanNvbmNwcC9yZWxlYXNlcw==\">https://github.com/open-source-parsers/jsoncpp/releases</span></p>\n</li>\n<li>\n<p>解压 (后面跟上你压缩包名称)</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> xzvf jsoncpp-1.9.5.tar.gz</pre></td></tr></table></figure></li>\n<li>\n<p>编译</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> build</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> build</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cmake <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr></table></figure></li>\n<li>\n<p>生成的静态库文件和动态库文件在 <code>build/lib</code>  下方</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>one@one-virtual-machine:~/下载/jsoncpp-1.9.5/build/lib$ <span class=\"token function\">ls</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>libjsoncpp.a  libjsoncpp.so  libjsoncpp.so.1.9.5  libjsoncpp.so.25</pre></td></tr></table></figure></li>\n<li>\n<p>将生成的静态库 / 动态库、头文件 <code>./include/json</code>  放置于你的项目目录下</p>\n</li>\n</ul>\n<h2 id=\"jsoncpp-api\"><a class=\"anchor\" href=\"#jsoncpp-api\">#</a>  <code>jsoncpp API</code></h2>\n<p><code>jsoncpp</code>  库中的类被定义在 <code>Json</code>  的命名空间中，使用 <code>jsoncpp</code>  解析 <code>json</code>  格式的数据，常用的一下几个类:</p>\n<h3 id=\"value\"><a class=\"anchor\" href=\"#value\">#</a>  <code>Value</code></h3>\n<p>封装了 <code>jsoncpp</code>  支持解析的数据类型，有如下几种：</p>\n<ul>\n<li><code>nullValue</code></li>\n<li><code>intValue</code></li>\n<li><code>uintValue</code></li>\n<li><code>realValue</code></li>\n<li><code>stringValue</code></li>\n<li><code>booleanValue</code></li>\n<li><code>arrayValue</code></li>\n<li><code>objectValue</code></li>\n</ul>\n<ol>\n<li>\n<p><strong>构造函数</strong></p>\n<pre><code class=\"language-cpp\"></code></pre>\n</li>\n<li>\n<p><strong>成员方法</strong></p>\n<pre><code class=\"language-cpp\"></code></pre>\n</li>\n</ol>\n<h3 id=\"fastwriter\"><a class=\"anchor\" href=\"#fastwriter\">#</a>  <code>FastWriter</code></h3>\n<p>将 <code>Value</code>  对象中的数据序列化为字符串</p>\n<h3 id=\"reader\"><a class=\"anchor\" href=\"#reader\">#</a>  <code>Reader</code></h3>\n<p>将 <code>json</code>  字符串反序列化为 <code>Value</code>  对象</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token class-name\">Reader</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string document<span class=\"token punctuation\">,</span> Value<span class=\"token operator\">&amp;</span> root<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> collectComments <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// C++ 风格</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>参数：</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t1. document: json 格式的字符串</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t2. root: 传出参数，保留解析出的数据（存储在 Value 对象中）</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t3. collectComments: 是否保存 json 字符串中的注释信息</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token class-name\">Reader</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>beginDoc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> endDoc<span class=\"token punctuation\">,</span> Value<span class=\"token operator\">&amp;</span> root<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> collectComments <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// C 风格</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token class-name\">Reader</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>istream<span class=\"token operator\">&amp;</span> is<span class=\"token punctuation\">,</span> Value<span class=\"token operator\">&amp;</span> root<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> collectComments <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "C++",
                "json"
            ]
        }
    ]
}