<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>繁華落盡 似水流年 • Posts by &#34;dolphinscheduler&#34; tag</title>
        <link>http://example.com</link>
        <description>编程日记 &amp; 随笔</description>
        <language>en</language>
        <pubDate>Sun, 01 Sep 2024 20:00:00 +0800</pubDate>
        <lastBuildDate>Sun, 01 Sep 2024 20:00:00 +0800</lastBuildDate>
        <category>mathematics</category>
        <category>语法</category>
        <category>C++</category>
        <category>VMware</category>
        <category>install</category>
        <category>数据库</category>
        <category>STL</category>
        <category>CNN</category>
        <category>Project</category>
        <category>面试题</category>
        <category>日常</category>
        <category>校招</category>
        <category>算法</category>
        <category>Leetcode双周赛</category>
        <category>Algorithm</category>
        <category>Leetcode周赛</category>
        <category>设计模式</category>
        <category>多线程</category>
        <category>池化技术</category>
        <category>MySQL</category>
        <category>操作系统</category>
        <category>计算机网络</category>
        <category>CMake</category>
        <category>线程池</category>
        <category>Go</category>
        <category>Redis</category>
        <category>Linux</category>
        <category>json</category>
        <category>Python</category>
        <category>牛客</category>
        <category>Git</category>
        <category>normalization</category>
        <category>推理加速</category>
        <category>LLM</category>
        <category>AI算法</category>
        <category>Pytorch</category>
        <category>激活函数</category>
        <category>部署</category>
        <category>DolphinScheduler</category>
        <item>
            <guid isPermalink="true">http://example.com/value/DolphinScheduler</guid>
            <title>DolphinScheduler</title>
            <link>http://example.com/value/DolphinScheduler</link>
            <category>DolphinScheduler</category>
            <pubDate>Sun, 01 Sep 2024 20:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;dolphinscheduler&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dolphinscheduler&#34;&gt;#&lt;/a&gt; DolphinScheduler&lt;/h1&gt;
&lt;h2 id=&#34;关于dolphinscheduler&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关于dolphinscheduler&#34;&gt;#&lt;/a&gt; 关于 &lt;code&gt;DolphinScheduler&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Apache DolphinScheduler&lt;/code&gt;  是一个分布式的易扩展的可视化 &lt;code&gt;DAG&lt;/code&gt;  工作流任务调度系统。旨在解决复杂大数据任务依赖关系，并为应用程序提供数据和各种 &lt;code&gt;OPS&lt;/code&gt;  编排.  &lt;code&gt;DophinScheduler&lt;/code&gt;  以 &lt;code&gt;DAG&lt;/code&gt;  流的方式组装任务，可以及时监控任务的执行状态，支持重试.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丰富的使用场景&lt;/li&gt;
&lt;li&gt;高可靠性： &lt;code&gt;High Reliability&lt;/code&gt; , 去中心化设计，确保稳定性。原生支持高可用 &lt;code&gt;High Avaliable&lt;/code&gt;  的任务队列，提供过载容错能力.&lt;/li&gt;
&lt;li&gt;搞扩展性： &lt;code&gt;High Scalability&lt;/code&gt; , 支持多租户和在线资源管理。支持每天 10 万个数据任务的稳定运行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模块&#34;&gt;#&lt;/a&gt; 模块&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master&lt;/code&gt; ：&lt;/li&gt;
&lt;li&gt;&lt;code&gt;worker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aler&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;api web&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;common&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dao&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;架构architecture&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#架构architecture&#34;&gt;#&lt;/a&gt; 架构 &lt;code&gt;architecture&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/Special-JiaHao/images/main/dolphinscheduler-architecture-1.3.0.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;MasterServer&lt;/code&gt; ：采用分布式无中心的设计理念， &lt;code&gt;MasterServer&lt;/code&gt;  主要负责 &lt;code&gt;DAG&lt;/code&gt;  任务切分、任务提交监控，并同时监听其他 &lt;code&gt;MasterServer&lt;/code&gt;  和 &lt;code&gt;WorkerServer&lt;/code&gt;  的健康状态.  &lt;code&gt;MasterServer&lt;/code&gt;  服务启动时向 &lt;code&gt;Zookeeper&lt;/code&gt;  注册临时节点，通过监听 &lt;code&gt;Zookeeper&lt;/code&gt;  临时节点的变化来进行容错处理， &lt;code&gt;MasterServer&lt;/code&gt;  基于 &lt;code&gt;netty&lt;/code&gt;  提供监听服务，该服务主要包含：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Distributed Quartz&lt;/code&gt;  分布式调度组件，主要负责定时任务的启停操作，当 &lt;code&gt;quartz&lt;/code&gt;  调启任务后， &lt;code&gt;Master&lt;/code&gt;  内部会有线程池具体负责处理任务的后续操作.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MasterSchedulerThread&lt;/code&gt;  是一个扫描线程，定时扫描数据库中的 &lt;code&gt;command&lt;/code&gt;  表，根据不同的任务类型进行不同的业务操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MasterExecThread&lt;/code&gt;  主要负责 &lt;code&gt;DAG&lt;/code&gt;  任务切分、任务提交监控、各种不同的任务类型的逻辑处理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MasterTaskExecThread&lt;/code&gt;  主要复制任务的可持久化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WorkerServer&lt;/code&gt; ：采用分布式无中心设计理念， &lt;code&gt;WorkerServer&lt;/code&gt;  主要负责任务的执行和提供日志服务.  &lt;code&gt;WorkerServer&lt;/code&gt;  服务启动时向 &lt;code&gt;Zookeeper&lt;/code&gt;  注册临时节点，比起维持心跳， &lt;code&gt;WorkerServer&lt;/code&gt;  基于 &lt;code&gt;netty&lt;/code&gt;  提供监听服务，该服务主要包含：
&lt;ul&gt;
&lt;li&gt;1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Zookeeper&lt;/code&gt; ：系统中的 &lt;code&gt;MasterServer&lt;/code&gt;  和 &lt;code&gt;WorkerServer&lt;/code&gt;  节点都通过 &lt;code&gt;Zookeeper&lt;/code&gt;  来进行集群的管理和容错。另外系统还基于 &lt;code&gt;ZooKeeper&lt;/code&gt;  进行时间的监听和分布式锁.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Task Queue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alert&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;API&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
    </channel>
</rss>
